{"ast":null,"code":"import { hasOwnProperty } from './object.js';\n\n/**\r\n * Get a property of a plain object\r\n * Throws an error in case the object is not a plain object or the\r\n * property is not defined on the object itself\r\n * @param {Object} object\r\n * @param {string} prop\r\n * @return {*} Returns the property value when safe\r\n */\nfunction getSafeProperty(object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\r\n * Set a property on a plain object.\r\n * Throws an error in case the object is not a plain object or the\r\n * property would override an inherited property like .constructor or .toString\r\n * @param {Object} object\r\n * @param {string} prop\r\n * @param {*} value\r\n * @return {*} Returns the value\r\n */\n// TODO: merge this function into access.js?\nfunction setSafeProperty(object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    object[prop] = value;\n    return value;\n  }\n  throw new Error('No access to property \"' + prop + '\"');\n}\nfunction getSafeProperties(object) {\n  return Object.keys(object).filter(prop => hasOwnProperty(object, prop));\n}\nfunction hasSafeProperty(object, prop) {\n  return prop in object;\n}\n\n/**\r\n * Test whether a property is safe to use for an object.\r\n * For example .toString and .constructor are not safe\r\n * @param {string} prop\r\n * @return {boolean} Returns true when safe\r\n */\nfunction isSafeProperty(object, prop) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g length\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\n/**\r\n * Validate whether a method is safe.\r\n * Throws an error when that's not the case.\r\n * @param {Object} object\r\n * @param {string} method\r\n * @return {function} Returns the method when valid\r\n */\nfunction getSafeMethod(object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n  return object[method];\n}\n\n/**\r\n * Check whether a method is safe.\r\n * Throws an error when that's not the case (for example for `constructor`).\r\n * @param {Object} object\r\n * @param {string} method\r\n * @return {boolean} Returns true when safe, false otherwise\r\n */\nfunction isSafeMethod(object, method) {\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\n    return false;\n  }\n  // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n  if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g toString\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\nfunction isPlainObject(object) {\n  return typeof object === 'object' && object && object.constructor === Object;\n}\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\nexport { getSafeProperty };\nexport { setSafeProperty };\nexport { isSafeProperty };\nexport { hasSafeProperty };\nexport { getSafeProperties };\nexport { getSafeMethod };\nexport { isSafeMethod };\nexport { isPlainObject };","map":{"version":3,"names":["hasOwnProperty","getSafeProperty","object","prop","isPlainObject","isSafeProperty","isSafeMethod","Error","setSafeProperty","value","getSafeProperties","Object","keys","filter","hasSafeProperty","safeNativeProperties","prototype","Function","getSafeMethod","method","undefined","getPrototypeOf","safeNativeMethods","constructor","length","name","toString","valueOf","toLocaleString"],"sources":["C:/Users/Joaquin Sanchez/React/portolio new/portfolio/node_modules/mathjs/lib/esm/utils/customs.js"],"sourcesContent":["import { hasOwnProperty } from './object.js';\r\n\r\n/**\r\n * Get a property of a plain object\r\n * Throws an error in case the object is not a plain object or the\r\n * property is not defined on the object itself\r\n * @param {Object} object\r\n * @param {string} prop\r\n * @return {*} Returns the property value when safe\r\n */\r\nfunction getSafeProperty(object, prop) {\r\n  // only allow getting safe properties of a plain object\r\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\r\n    return object[prop];\r\n  }\r\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\r\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\r\n  }\r\n  throw new Error('No access to property \"' + prop + '\"');\r\n}\r\n\r\n/**\r\n * Set a property on a plain object.\r\n * Throws an error in case the object is not a plain object or the\r\n * property would override an inherited property like .constructor or .toString\r\n * @param {Object} object\r\n * @param {string} prop\r\n * @param {*} value\r\n * @return {*} Returns the value\r\n */\r\n// TODO: merge this function into access.js?\r\nfunction setSafeProperty(object, prop, value) {\r\n  // only allow setting safe properties of a plain object\r\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\r\n    object[prop] = value;\r\n    return value;\r\n  }\r\n  throw new Error('No access to property \"' + prop + '\"');\r\n}\r\nfunction getSafeProperties(object) {\r\n  return Object.keys(object).filter(prop => hasOwnProperty(object, prop));\r\n}\r\nfunction hasSafeProperty(object, prop) {\r\n  return prop in object;\r\n}\r\n\r\n/**\r\n * Test whether a property is safe to use for an object.\r\n * For example .toString and .constructor are not safe\r\n * @param {string} prop\r\n * @return {boolean} Returns true when safe\r\n */\r\nfunction isSafeProperty(object, prop) {\r\n  if (!object || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n  // SAFE: whitelisted\r\n  // e.g length\r\n  if (hasOwnProperty(safeNativeProperties, prop)) {\r\n    return true;\r\n  }\r\n  // UNSAFE: inherited from Object prototype\r\n  // e.g constructor\r\n  if (prop in Object.prototype) {\r\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\r\n    // which is inconsistent on root prototypes. It is safe\r\n    // here because Object.prototype is a root object\r\n    return false;\r\n  }\r\n  // UNSAFE: inherited from Function prototype\r\n  // e.g call, apply\r\n  if (prop in Function.prototype) {\r\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\r\n    // which is inconsistent on root prototypes. It is safe\r\n    // here because Function.prototype is a root object\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Validate whether a method is safe.\r\n * Throws an error when that's not the case.\r\n * @param {Object} object\r\n * @param {string} method\r\n * @return {function} Returns the method when valid\r\n */\r\nfunction getSafeMethod(object, method) {\r\n  if (!isSafeMethod(object, method)) {\r\n    throw new Error('No access to method \"' + method + '\"');\r\n  }\r\n  return object[method];\r\n}\r\n\r\n/**\r\n * Check whether a method is safe.\r\n * Throws an error when that's not the case (for example for `constructor`).\r\n * @param {Object} object\r\n * @param {string} method\r\n * @return {boolean} Returns true when safe, false otherwise\r\n */\r\nfunction isSafeMethod(object, method) {\r\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\r\n    return false;\r\n  }\r\n  // UNSAFE: ghosted\r\n  // e.g overridden toString\r\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\r\n  if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\r\n    return false;\r\n  }\r\n  // SAFE: whitelisted\r\n  // e.g toString\r\n  if (hasOwnProperty(safeNativeMethods, method)) {\r\n    return true;\r\n  }\r\n  // UNSAFE: inherited from Object prototype\r\n  // e.g constructor\r\n  if (method in Object.prototype) {\r\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\r\n    // which is inconsistent on root prototypes. It is safe\r\n    // here because Object.prototype is a root object\r\n    return false;\r\n  }\r\n  // UNSAFE: inherited from Function prototype\r\n  // e.g call, apply\r\n  if (method in Function.prototype) {\r\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\r\n    // which is inconsistent on root prototypes. It is safe\r\n    // here because Function.prototype is a root object\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction isPlainObject(object) {\r\n  return typeof object === 'object' && object && object.constructor === Object;\r\n}\r\nvar safeNativeProperties = {\r\n  length: true,\r\n  name: true\r\n};\r\nvar safeNativeMethods = {\r\n  toString: true,\r\n  valueOf: true,\r\n  toLocaleString: true\r\n};\r\nexport { getSafeProperty };\r\nexport { setSafeProperty };\r\nexport { isSafeProperty };\r\nexport { hasSafeProperty };\r\nexport { getSafeProperties };\r\nexport { getSafeMethod };\r\nexport { isSafeMethod };\r\nexport { isPlainObject };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { isHelp } from '../utils/is.js';\nimport { clone } from '../utils/object.js';\nimport { format } from '../utils/string.js';\nimport { factory } from '../utils/factory.js';\nvar name = 'Help';\nvar dependencies = ['parse'];\nexport var createHelpClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    parse\n  } = _ref;\n  /**\r\n   * Documentation object\r\n   * @param {Object} doc  Object containing properties:\r\n   *                      {string} name\r\n   *                      {string} category\r\n   *                      {string} description\r\n   *                      {string[]} syntax\r\n   *                      {string[]} examples\r\n   *                      {string[]} seealso\r\n   * @constructor\r\n   */\n  function Help(doc) {\n    if (!(this instanceof Help)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n    if (!doc) throw new Error('Argument \"doc\" missing');\n    this.doc = doc;\n  }\n\n  /**\r\n   * Attach type information\r\n   */\n  Help.prototype.type = 'Help';\n  Help.prototype.isHelp = true;\n\n  /**\r\n   * Generate a string representation of the Help object\r\n   * @return {string} Returns a string\r\n   * @private\r\n   */\n  Help.prototype.toString = function () {\n    var doc = this.doc || {};\n    var desc = '\\n';\n    if (doc.name) {\n      desc += 'Name: ' + doc.name + '\\n\\n';\n    }\n    if (doc.category) {\n      desc += 'Category: ' + doc.category + '\\n\\n';\n    }\n    if (doc.description) {\n      desc += 'Description:\\n    ' + doc.description + '\\n\\n';\n    }\n    if (doc.syntax) {\n      desc += 'Syntax:\\n    ' + doc.syntax.join('\\n    ') + '\\n\\n';\n    }\n    if (doc.examples) {\n      desc += 'Examples:\\n';\n      var scope = {};\n      for (var i = 0; i < doc.examples.length; i++) {\n        var expr = doc.examples[i];\n        desc += '    ' + expr + '\\n';\n        var res = void 0;\n        try {\n          // note: res can be undefined when `expr` is an empty string\n          res = parse(expr).compile().evaluate(scope);\n        } catch (e) {\n          res = e;\n        }\n        if (res !== undefined && !isHelp(res)) {\n          desc += '        ' + format(res, {\n            precision: 14\n          }) + '\\n';\n        }\n      }\n      desc += '\\n';\n    }\n    if (doc.mayThrow && doc.mayThrow.length) {\n      desc += 'Throws: ' + doc.mayThrow.join(', ') + '\\n\\n';\n    }\n    if (doc.seealso && doc.seealso.length) {\n      desc += 'See also: ' + doc.seealso.join(', ') + '\\n';\n    }\n    return desc;\n  };\n\n  /**\r\n   * Export the help object to JSON\r\n   */\n  Help.prototype.toJSON = function () {\n    var obj = clone(this.doc);\n    obj.mathjs = 'Help';\n    return obj;\n  };\n\n  /**\r\n   * Instantiate a Help object from a JSON object\r\n   * @param {Object} json\r\n   * @returns {Help} Returns a new Help object\r\n   */\n  Help.fromJSON = function (json) {\n    var doc = {};\n    Object.keys(json).filter(prop => prop !== 'mathjs').forEach(prop => {\n      doc[prop] = json[prop];\n    });\n    return new Help(doc);\n  };\n\n  /**\r\n   * Returns a string representation of the Help object\r\n   */\n  Help.prototype.valueOf = Help.prototype.toString;\n  return Help;\n}, {\n  isClass: true\n});","map":{"version":3,"names":["isHelp","clone","format","factory","name","dependencies","createHelpClass","_ref","parse","Help","doc","SyntaxError","Error","prototype","type","toString","desc","category","description","syntax","join","examples","scope","i","length","expr","res","compile","evaluate","e","undefined","precision","mayThrow","seealso","toJSON","obj","mathjs","fromJSON","json","Object","keys","filter","prop","forEach","valueOf","isClass"],"sources":["C:/Users/Joaquin Sanchez/React/portolio new/portfolio/node_modules/mathjs/lib/esm/expression/Help.js"],"sourcesContent":["import { isHelp } from '../utils/is.js';\r\nimport { clone } from '../utils/object.js';\r\nimport { format } from '../utils/string.js';\r\nimport { factory } from '../utils/factory.js';\r\nvar name = 'Help';\r\nvar dependencies = ['parse'];\r\nexport var createHelpClass = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    parse\r\n  } = _ref;\r\n  /**\r\n   * Documentation object\r\n   * @param {Object} doc  Object containing properties:\r\n   *                      {string} name\r\n   *                      {string} category\r\n   *                      {string} description\r\n   *                      {string[]} syntax\r\n   *                      {string[]} examples\r\n   *                      {string[]} seealso\r\n   * @constructor\r\n   */\r\n  function Help(doc) {\r\n    if (!(this instanceof Help)) {\r\n      throw new SyntaxError('Constructor must be called with the new operator');\r\n    }\r\n    if (!doc) throw new Error('Argument \"doc\" missing');\r\n    this.doc = doc;\r\n  }\r\n\r\n  /**\r\n   * Attach type information\r\n   */\r\n  Help.prototype.type = 'Help';\r\n  Help.prototype.isHelp = true;\r\n\r\n  /**\r\n   * Generate a string representation of the Help object\r\n   * @return {string} Returns a string\r\n   * @private\r\n   */\r\n  Help.prototype.toString = function () {\r\n    var doc = this.doc || {};\r\n    var desc = '\\n';\r\n    if (doc.name) {\r\n      desc += 'Name: ' + doc.name + '\\n\\n';\r\n    }\r\n    if (doc.category) {\r\n      desc += 'Category: ' + doc.category + '\\n\\n';\r\n    }\r\n    if (doc.description) {\r\n      desc += 'Description:\\n    ' + doc.description + '\\n\\n';\r\n    }\r\n    if (doc.syntax) {\r\n      desc += 'Syntax:\\n    ' + doc.syntax.join('\\n    ') + '\\n\\n';\r\n    }\r\n    if (doc.examples) {\r\n      desc += 'Examples:\\n';\r\n      var scope = {};\r\n      for (var i = 0; i < doc.examples.length; i++) {\r\n        var expr = doc.examples[i];\r\n        desc += '    ' + expr + '\\n';\r\n        var res = void 0;\r\n        try {\r\n          // note: res can be undefined when `expr` is an empty string\r\n          res = parse(expr).compile().evaluate(scope);\r\n        } catch (e) {\r\n          res = e;\r\n        }\r\n        if (res !== undefined && !isHelp(res)) {\r\n          desc += '        ' + format(res, {\r\n            precision: 14\r\n          }) + '\\n';\r\n        }\r\n      }\r\n      desc += '\\n';\r\n    }\r\n    if (doc.mayThrow && doc.mayThrow.length) {\r\n      desc += 'Throws: ' + doc.mayThrow.join(', ') + '\\n\\n';\r\n    }\r\n    if (doc.seealso && doc.seealso.length) {\r\n      desc += 'See also: ' + doc.seealso.join(', ') + '\\n';\r\n    }\r\n    return desc;\r\n  };\r\n\r\n  /**\r\n   * Export the help object to JSON\r\n   */\r\n  Help.prototype.toJSON = function () {\r\n    var obj = clone(this.doc);\r\n    obj.mathjs = 'Help';\r\n    return obj;\r\n  };\r\n\r\n  /**\r\n   * Instantiate a Help object from a JSON object\r\n   * @param {Object} json\r\n   * @returns {Help} Returns a new Help object\r\n   */\r\n  Help.fromJSON = function (json) {\r\n    var doc = {};\r\n    Object.keys(json).filter(prop => prop !== 'mathjs').forEach(prop => {\r\n      doc[prop] = json[prop];\r\n    });\r\n    return new Help(doc);\r\n  };\r\n\r\n  /**\r\n   * Returns a string representation of the Help object\r\n   */\r\n  Help.prototype.valueOf = Help.prototype.toString;\r\n  return Help;\r\n}, {\r\n  isClass: true\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}